openapi: 3.1.0

info:
  title: Api Back-end
  version: '1.0'
  description: "GrupoA Backend"
servers:
  - url: '{api-protocol}://{api-host}'
    description: API Server
    variables:
      api-protocol:
        enum:
          - http
          - https
        default: http
        description: Transport protocol
      api-host:
        enum:
          - localhost:8989
        default: localhost:8989
        description: Host da API
        
tags:
  - name: Auth
  - name: Task
    
paths:
  /api/auth/login:
     post:
       description: Login in account - generate token
       tags:
         - Auth
       summary: Route to login
       operationId: login
       requestBody:
         description: Body requisition in Json
         required: true
         content:
           application/json:
             schema:
               type: object
               properties:
                 email:
                   type: string
                   description: User email
                   example: zabbott@example.net
                   
                 password:
                   type: string
                   description: User password
                   example: password
             
                   
       responses:
          '200':
            description: Sucessfuly logged in
            content:
              application/json:
                schema:
                   type: object
                   description: Response
                   properties:
                     access_token:
                       type: string
                       description: Generated JTW Token
                       example: eyJ0eXAiOiJKV1QiLCJhbGciO...
                       
                     token_type:
                       type: string
                       description: Type of token
                       example: bearer
                       
                     expires_in:
                       type: string
                       description: "Token's expiration time"
                       example: 2h Hours
                    
          '401':
            description: Login unauthorized
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/Unauthorized"
  
  /api/auth/register:
     post:
       description: Create a new account
       tags:
         - Auth
       summary: Route to register new user
       operationId: login
       requestBody:
         description: Body requisition in Json
         required: true
         content:
           application/json:
             schema:
               type: object
               properties:
                 name:
                    type: string
                    description: User name
                    example: Zabbott Ipsum

                 email:
                   type: string
                   description: User email
                   example: zabbott@example.net
                   
                 password:
                   type: string
                   description: User password
                   example: password
             
                   
       responses:
          '201':
            description: Sucessfuly logged registered
            content:
              application/json:
                schema:
                   type: object
                   description: Response
                   properties:
                    data:
                      type: object
                      properties:
                        name:
                          type: string
                          description: User name
                          example: Zabbott Ipsum

                        email:
                          type: string
                          description: User email
                          example: zabbott@example.net
                          
                        password:
                          type: string
                          description: User password
                          example: password
                    
                    statusCode:
                      type: integer
                      example: 201
                    
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                   type: object
                   description: Response
                   properties:
                     message:
                       type: string
                       description: Message error
                       example: Server error message
                       
                     statusCode:
                       type: string
                       description: http status code
                       example: '500'

  
  /api/tasks:
    get:
      description: List all tasks
      summary: List all tasks
      tags:
        - Task
      operationId: AllTasks
      security:
      - bearerAuth: []
            
      responses:
        '200':
          description: List of all tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: task uuid
                      example: 9944a6df-a5cd-47cf-a8d7-ad657482a86c
                    title:
                      type: string
                      description: task title
                      example: task title
                      
                    description:
                      type: string
                      description: task description
                      example: Task description
                  
                    finished:
                      type: boolean
                      description: is task finished
                      example: false                  
                  
                    finisehd_at:
                      type: null
                      description: task finished at
                      example: null
                   
                    created_at:
                      type: string
                      description: task created at
                      example: "2023-05-27T15:28:31.000000Z"
                      
                    updated_at:
                      type: string
                      description: task updated at
                      example: "2023-05-27T15:28:31.000000Z"
        
        '401':
            description: Login unauthorized
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/Unauthorized"
        
        
  /api/tasks/{uuid}:                    
    get:
      description: Get task by uuid
      summary: Get task by uuid
      tags:
        - Task
      operationId: UuidTasks
      security:
      - bearerAuth: []
      
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 9944a6df-a5cd-47cf-a8d7-ad657482a86c
      
      responses:
        '200':
          description: Get task by uuid
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    properties:
                    data:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: task uuid
                          example: 9944a6df-a5cd-47cf-a8d7-ad657482a86c
                        title:
                          type: string
                          description: task title
                          example: task title
                      
                        description:
                          type: string
                          description: task description
                          example: Task description

                        finished:
                          type: boolean
                          description: is task finished
                          example: false                  
                  
                        finisehd_at:
                          type: null
                          description: task finished at
                          example: null

                        created_at:
                          type: string
                          description: task created at
                          example: "2023-05-27T15:28:31.000000Z"

                        updated_at:
                          type: string
                          description: task updated at
                          example: "2023-05-27T15:28:31.000000Z"
                    
                    statusCode:
                      type: integer
                      example: 200
        
        '401':
            description: Login unauthorized
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/Unauthorized"
                   
                   
        '404':
            description: Task not found
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/NotFound"
        
  /api/tasks/create:                    
    post:
      description: Create task
      summary: Create task
      tags:
        - Task
      operationId: CreateTask
      security:
      - bearerAuth: []
      
      requestBody:
         description: Body requisition in Json
         required: true
         content:
           application/json:
             schema:
               type: object
               properties:
                 title:
                   type: string
                   description: Task title
                   example: Task title example 
                   
                 description:
                   type: string
                   description: Task description
                   example: Task description example 
      
      responses:
        '201':
          description: Create task response
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    properties:
                    data:
                      type: object
                      properties:
                        title:
                          type: string
                          description: task title
                          example: task title
                      
                        description:
                          type: string
                          description: task description
                          example: Task description
                          
                        uuid:
                          type: string
                          description: task uuid
                          example: 9944a6df-a5cd-47cf-a8d7-ad657482a86c

  
        '401':
            description: Login unauthorized
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/Unauthorized"
        
  
  /api/tasks/update/{uuid}:                    
    put:
      description: Update task
      summary: Update task
      tags:
        - Task
      operationId: UpdateTask
      security:
      - bearerAuth: []
      
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 9944a6df-a5cd-47cf-a8d7-ad657482a86c
      
      requestBody:
         description: Body requisition in Json
         required: true
         content:
           application/json:
             schema:
               type: object
               properties:
                 title:
                   type: string
                   description: Task title
                   example: Task title example 
                   
                 description:
                   type: string
                   description: Task description
                   example: Task description example 
      
      responses:
        '200':
          description: Updated task response
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    properties:
                    data:
                      type: object
                      properties:
                        title:
                          type: string
                          description: task title
                          example: task title
                      
                        description:
                          type: string
                          description: task description
                          example: Task description
                          
                        uuid:
                          type: string
                          description: task uuid
                          example: 9944a6df-a5cd-47cf-a8d7-ad657482a86c

                    statusCode:
                      type: integer
                      example: 201
  
        '401':
            description: Login unauthorized
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/Unauthorized"
  
        '404':
            description: Task not found
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/NotFound"
  
  /api/tasks/delete/{uuid}:                    
    delete:
      description: Delete task
      summary: Delete task
      tags:
        - Task
      operationId: DeleteTask
      security:
      - bearerAuth: []
      
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            example: 9944a6df-a5cd-47cf-a8d7-ad657482a86c

      responses:
        '200':
          description: Updated task response
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    properties:
                    message:
                      type: string
                      example: Task deleted

  
        '401':
            description: Login unauthorized
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/Unauthorized"
  
        '404':
            description: Task not found
            content:
              application/json:
                schema:
                   $ref: "#/components/schemas/NotFound"
  
        
components:
  schemas:
    Unauthorized:
       type: object
       description: Response
       properties:
         message:
           type: string
           description: Message error
           example: unauthorized
                       
         statusCode:
           type: string
           description: http status code
           example: '401'
           
    NotFound:
       type: object
       description: Response
       properties:
         message:
           type: string
           description: Message error
           example: The task was not found.
                       
         statusCode:
           type: string
           description: http status code
           example: '404'       
           
              
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT
     